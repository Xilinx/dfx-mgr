#include <iostream>
#include "adf/adf_api/AIEControlConfig.h"


/************************** Graph Configurations  *****************************/

  adf::GraphConfig GraphConfigurations[] = {
  //{id, name, graphLoadElfFunc, graphInitFunc, graphDebugHalt, coreColumns, coreRows, iterMemColumns, iterMemRows, iterMemAddrs, triggered, plKernelInstanceNames, plAxiLiteModes, plDriverStartFuncs, plDriverCheckIPDoneFuncs}
    {0, "my_graph", nullptr, nullptr, nullptr, {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 41, 41, 41, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49}, {0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 7}, {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 3, 3, 3, 2, 4, 3, 3, 3, 4, 4, 4, 3, 4, 4, 4, 3, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 5, 6, 6, 6, 6, 6, 7, 8, 7, 7, 7, 7, 7, 7, 7, 9, 8, 9, 8, 8, 8, 8, 8, 9, 9, 9, 9, 10, 8, 9, 10, 11, 10, 10, 10, 10, 9, 10, 10, 11, 11, 12, 11, 11, 11, 11, 12, 12, 12, 12, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 12, 13, 14, 14, 14, 14, 14, 14, 14, 15, 15, 16, 15, 15, 15, 16, 14, 15, 15, 16, 16, 16, 15, 16, 16, 17, 16, 17, 17, 17, 17, 18, 17, 17, 18, 18, 17, 18, 18, 19, 18, 18, 19, 19, 19, 19, 18, 20, 19, 19, 20, 21, 19, 20, 20, 21, 20, 21, 20, 21, 21, 21, 20, 21, 20, 21, 22, 22, 22, 23, 22, 22, 22, 22, 23, 24, 22, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 26, 25, 25, 25, 25, 26, 26, 25, 27, 26, 27, 26, 27, 26, 27, 27, 27, 26, 27, 26, 28, 27, 29, 28, 28, 28, 29, 28, 29, 28, 29, 28, 30, 29, 29, 28, 30, 29, 30, 30, 30, 30, 30, 29, 31, 30, 31, 31, 31, 31, 31, 31, 32, 31, 32, 32, 32, 32, 33, 32, 32, 32, 33, 33, 33, 33, 34, 33, 34, 33, 34, 34, 34, 34, 35, 33, 34, 35, 35, 34, 35, 35, 35, 35, 36, 36, 37, 36, 36, 36, 36, 35, 36, 36, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 39, 38, 38, 39, 39, 38, 39, 39, 39, 39, 39, 40, 40, 40, 41, 40, 40, 40, 40, 41, 41, 41, 42, 41, 42, 40, 41, 42, 42, 42, 42, 41, 43, 41, 42, 43, 43, 43, 43, 43, 44, 42, 43, 44, 44, 44, 44, 44, 44, 43, 44, 45, 45, 45, 45, 45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 48, 47, 47, 48, 49, 47, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49}, {0, 1, 3, 2, 5, 6, 7, 7, 1, 0, 2, 3, 4, 4, 5, 7, 0, 1, 3, 4, 5, 6, 6, 7, 1, 0, 2, 3, 3, 4, 5, 7, 1, 0, 2, 2, 5, 4, 6, 6, 1, 0, 3, 4, 5, 6, 7, 7, 1, 0, 2, 2, 3, 4, 5, 6, 1, 1, 3, 2, 4, 6, 5, 7, 0, 1, 2, 3, 3, 4, 5, 7, 0, 0, 2, 4, 5, 5, 6, 7, 1, 1, 3, 2, 4, 6, 6, 7, 0, 0, 2, 3, 3, 6, 5, 7, 0, 2, 1, 4, 4, 5, 7, 7, 0, 1, 2, 3, 4, 5, 6, 6, 0, 2, 1, 4, 3, 5, 7, 7, 1, 1, 2, 3, 5, 5, 6, 6, 0, 2, 3, 4, 4, 6, 7, 7, 0, 0, 1, 3, 4, 5, 5, 6, 1, 0, 2, 2, 3, 5, 7, 6, 0, 1, 3, 4, 4, 5, 6, 7, 1, 1, 2, 2, 3, 5, 7, 7, 0, 0, 2, 3, 4, 4, 6, 6, 1, 0, 3, 3, 4, 5, 6, 7, 1, 1, 2, 2, 5, 4, 6, 7, 0, 0, 2, 4, 3, 6, 5, 7, 0, 1, 3, 3, 4, 5, 7, 6, 1, 2, 2, 3, 5, 5, 7, 7, 0, 1, 2, 4, 4, 6, 6, 7, 0, 1, 1, 4, 3, 5, 5, 7, 0, 2, 2, 3, 3, 4, 6, 7, 0, 2, 1, 4, 5, 6, 6, 7, 0, 2, 1, 4, 3, 5, 6, 7, 0, 2, 1, 3, 4, 5, 5, 6, 0, 1, 3, 2, 4, 5, 7, 7, 0, 0, 1, 4, 3, 5, 6, 6, 0, 1, 2, 2, 3, 4, 7, 7, 1, 1, 2, 3, 4, 5, 6, 6, 0, 0, 2, 4, 3, 5, 7, 6, 1, 0, 3, 4, 5, 5, 6, 7, 1, 0, 2, 2, 3, 4, 7, 6, 0, 2, 1, 3, 3, 4, 5, 7, 0, 1, 2, 3, 5, 5, 6, 7, 1, 0, 2, 4, 4, 5, 6, 7, 1, 0, 3, 2, 4, 5, 6, 7, 0, 2, 1, 4, 3, 6, 6, 7, 0, 2, 1, 4, 3, 5, 6, 7, 0, 1, 3, 2, 5, 4, 6, 7, 0, 1, 3, 4, 5, 5, 7, 6, 1, 1, 2, 2, 3, 4, 7, 6, 0, 0, 3, 2, 5, 4, 6, 7}, {0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4, 0x12c4}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {}, {}, {}, {},  }, 
  };
  const int NUM_GRAPH = 1;


/************************** GMIO Configurations  *****************************/

  adf::GMIOConfig GMIOConfigurations[] = {
  //{id, name, loginal_name, type, shim_column, c_rts_channel_num (0-S2MM0,1-S2MM1,2-MM2S0,3-MM2S1), streamId, burst_length, plKernelInstanceName, plParameterIndex, plId (for aiesim), pl_driver_to_set_maxi_addr}
    {0, "gmin[0]", "gmioin0", (adf::gmio_config::gmio_type)0, 2, 2, 3, 4, "", -1, -1, nullptr},
    {1, "gmin[1]", "gmioin1", (adf::gmio_config::gmio_type)0, 7, 2, 3, 4, "", -1, -1, nullptr},
    {2, "gmin[2]", "gmioin2", (adf::gmio_config::gmio_type)0, 6, 2, 3, 4, "", -1, -1, nullptr},
    {3, "gmin[3]", "gmioin3", (adf::gmio_config::gmio_type)0, 7, 3, 7, 4, "", -1, -1, nullptr},
    {4, "gmin[4]", "gmioin4", (adf::gmio_config::gmio_type)0, 3, 2, 3, 4, "", -1, -1, nullptr},
    {5, "gmin[5]", "gmioin5", (adf::gmio_config::gmio_type)0, 2, 3, 7, 4, "", -1, -1, nullptr},
    {6, "gmin[6]", "gmioin6", (adf::gmio_config::gmio_type)0, 6, 3, 7, 4, "", -1, -1, nullptr},
    {7, "gmin[7]", "gmioin7", (adf::gmio_config::gmio_type)0, 3, 3, 7, 4, "", -1, -1, nullptr},
    {8, "gmout[0]", "gmioout0", (adf::gmio_config::gmio_type)1, 43, 1, 3, 4, "", -1, -1, nullptr},
    {9, "gmout[1]", "gmioout1", (adf::gmio_config::gmio_type)1, 46, 1, 3, 4, "", -1, -1, nullptr},
    {10, "gmout[2]", "gmioout2", (adf::gmio_config::gmio_type)1, 47, 0, 2, 4, "", -1, -1, nullptr},
    {11, "gmout[3]", "gmioout3", (adf::gmio_config::gmio_type)1, 46, 0, 2, 4, "", -1, -1, nullptr},
    {12, "gmout[4]", "gmioout4", (adf::gmio_config::gmio_type)1, 42, 0, 2, 4, "", -1, -1, nullptr},
    {13, "gmout[5]", "gmioout5", (adf::gmio_config::gmio_type)1, 47, 1, 3, 4, "", -1, -1, nullptr},
    {14, "gmout[6]", "gmioout6", (adf::gmio_config::gmio_type)1, 43, 0, 2, 4, "", -1, -1, nullptr},
    {15, "gmout[7]", "gmioout7", (adf::gmio_config::gmio_type)1, 42, 1, 3, 4, "", -1, -1, nullptr},
  };
  const int NUM_GMIO = 16;


/************************** ADF API initializer *****************************/

  class InitializeAIEControlXRT
  {
  public:
    InitializeAIEControlXRT()
    {
      std::cout<<"Initializing ADF API..."<<std::endl;
#ifdef __EXCLUDE_PL_CONTROL__
      bool exclude_pl_control = true;
#else
      bool exclude_pl_control = false;
#endif
      adf::initializeConfigurations(nullptr, 0, 0, 0,
                                    GraphConfigurations, NUM_GRAPH,
                                    nullptr, 0,
                                    nullptr, 0,
                                    nullptr, 0,
                                    GMIOConfigurations, NUM_GMIO,
                                    nullptr, 0,
                                    nullptr, 0, 0, nullptr,
                                    false, exclude_pl_control, false, nullptr
                                    , false);

    }
  } initAIEControlXRT;



#if !defined(__CDO__)

// Kernel Stub Definition
  void OneInput(input_window<int> *,output_window<int> *,output_window<int> *) { /* Stub */ } 
  void OneOutput(input_window<int> *,input_window<int> *,output_window<int> *) { /* Stub */ } 
  void TwoInputs(input_window<int> *,input_window<int> *,output_window<int> *,output_window<int> *) { /* Stub */ } 
#endif
