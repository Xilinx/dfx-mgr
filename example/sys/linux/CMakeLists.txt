collector_list  (_list PROJECT_INC_DIRS)
include_directories (${_list} ${CMAKE_CURRENT_SOURCE_DIR})

collector_list  (_list PROJECT_LIB_DIRS)
link_directories (${_list})

set (_deps "fpga")
foreach (_lib ${_deps})
  message ("Looking for ${_lib}")
  find_library (_lib_path ${_lib})
  if (NOT _lib_path)
    message ( "external library ${_lib} not found" )
    message ( "hint: you may need to pass -DCMAKE_LIBRARY_PATH=<path>" )
    message ( FATAL_ERROR "library ${_lib} is required to build the examples" )
  endif (NOT _lib_path)
  get_filename_component (_lib_path ${_lib_path} DIRECTORY)
  collect (PROJECT_LIB_DIRS ${_lib_path})
endforeach()

collector_list  (_list PROJECT_LIB_DIRS)
link_directories (${_list})

foreach (_app accel-bzip2)
  set (_src ${CMAKE_CURRENT_SOURCE_DIR}/${_app}.c)
  if (WITH_SHARED_LIB)
    add_executable (${_app}-share ${_src})
    if (PROJECT_EC_FLAGS)
      string(REPLACE " " ";" _ec_flgs ${PROJECT_EC_FLAGS})
      target_compile_options (${_app}-share PUBLIC ${_ec_flgs})
    endif (PROJECT_EC_FLAGS)
    target_link_libraries (${_app}-share ${PROJECT_NAME}-shared ${_deps})
    install (TARGETS ${_app}-share RUNTIME DESTINATION bin)
    add_dependencies (${_app}-share ${PROJECT_NAME}-shared)
  endif (WITH_SHARED_LIB)

  if (WITH_STATIC_LIB)
    if (${PROJECT_SYSTEM} STREQUAL "linux")
        add_executable (${_app}-static ${_src})
        if (PROJECT_EC_FLAGS)
          string(REPLACE " " ";" _ec_flgs ${PROJECT_EC_FLAGS})
          target_compile_options (${_app}-static PUBLIC ${_ec_flgs})
        endif (PROJECT_EC_FLAGS)
        target_link_libraries (${_app}-static ${PROJECT_NAME}-static ${_deps})
        install (TARGETS ${_app}-static RUNTIME DESTINATION bin)
    endif (${PROJECT_SYSTEM} STREQUAL "linux")
  endif (WITH_STATIC_LIB)
endforeach (_app)
